(window.webpackJsonp=window.webpackJsonp||[]).push([[14],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var a=n(0),i=n.n(a);function r(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function o(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var a=Object.getOwnPropertySymbols(e);t&&(a=a.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,a)}return n}function c(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?o(Object(n),!0).forEach((function(t){r(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):o(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function s(e,t){if(null==e)return{};var n,a,i=function(e,t){if(null==e)return{};var n,a,i={},r=Object.keys(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||(i[n]=e[n]);return i}(e,t);if(Object.getOwnPropertySymbols){var r=Object.getOwnPropertySymbols(e);for(a=0;a<r.length;a++)n=r[a],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(i[n]=e[n])}return i}var l=i.a.createContext({}),p=function(e){var t=i.a.useContext(l),n=t;return e&&(n="function"==typeof e?e(t):c(c({},t),e)),n},b=function(e){var t=p(e.components);return i.a.createElement(l.Provider,{value:t},e.children)},d={inlineCode:"code",wrapper:function(e){var t=e.children;return i.a.createElement(i.a.Fragment,{},t)}},m=i.a.forwardRef((function(e,t){var n=e.components,a=e.mdxType,r=e.originalType,o=e.parentName,l=s(e,["components","mdxType","originalType","parentName"]),b=p(n),m=a,u=b["".concat(o,".").concat(m)]||b[m]||d[m]||r;return n?i.a.createElement(u,c(c({ref:t},l),{},{components:n})):i.a.createElement(u,c({ref:t},l))}));function u(e,t){var n=arguments,a=t&&t.mdxType;if("string"==typeof e||a){var r=n.length,o=new Array(r);o[0]=m;var c={};for(var s in t)hasOwnProperty.call(t,s)&&(c[s]=t[s]);c.originalType=e,c.mdxType="string"==typeof e?e:a,o[1]=c;for(var l=2;l<r;l++)o[l]=n[l];return i.a.createElement.apply(null,o)}return i.a.createElement.apply(null,n)}m.displayName="MDXCreateElement"},76:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return c})),n.d(t,"metadata",(function(){return s})),n.d(t,"rightToc",(function(){return l})),n.d(t,"default",(function(){return b}));var a=n(2),i=n(6),r=(n(0),n(106)),o=["components"],c={id:"ex16",title:"Day 16 In-class Exercise"},s={unversionedId:"exercises/ex16",id:"exercises/ex16",isDocsHomePage:!1,title:"Day 16 In-class Exercise",description:"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and try to finish on your own before our next class meeting. Remember to submit on Gradescope once or more, checking the autograder results. For credit, you must submit by the end of the semester, passing the autograder tests.",source:"@site/docs\\exercises\\ex16.md",slug:"/exercises/ex16",permalink:"/cs220-summer21/docs/exercises/ex16",version:"current"},l=[{value:"Learning Objectives",id:"learning-objectives",children:[{value:"Part 0 - Get the starter codes",id:"part-0---get-the-starter-codes",children:[]},{value:"Part 1 - Class inheritance",id:"part-1---class-inheritance",children:[]},{value:"Part 2 - More class inheritance and abstract class",id:"part-2---more-class-inheritance-and-abstract-class",children:[]},{value:"Part 3 - Gradescope submission",id:"part-3---gradescope-submission",children:[]}]}],p={rightToc:l};function b(e){var t=e.components,n=Object(i.a)(e,o);return Object(r.b)("wrapper",Object(a.a)({},p,n,{components:t,mdxType:"MDXLayout"}),Object(r.b)("div",{className:"admonition admonition-info alert alert--info"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and try to finish on your own before our next class meeting. Remember to submit on Gradescope once or more, checking the autograder results. For credit, you must submit by the end of the semester, passing the autograder tests. "))),Object(r.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(r.b)("div",{className:"admonition admonition-success alert alert--success"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Objectives")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"This exercise will help you gain familiarity with:"),Object(r.b)("ul",{parentName:"div"},Object(r.b)("li",{parentName:"ul"},"Inheritance"),Object(r.b)("li",{parentName:"ul"},"Polymorphism"),Object(r.b)("li",{parentName:"ul"},"Function overriding"),Object(r.b)("li",{parentName:"ul"},"Abstract classes")))),Object(r.b)("h3",{id:"part-0---get-the-starter-codes"},"Part 0 - Get the starter codes"),Object(r.b)("p",null,"Get the starter codes from ",Object(r.b)("inlineCode",{parentName:"p"},"cs220-public"),", copy them over to ",Object(r.b)("inlineCode",{parentName:"p"},"cs220")," (remember to create a new directory ",Object(r.b)("inlineCode",{parentName:"p"},"ex16")," for that), and create an initial commit with the copied starter codes.  You should see the following files: ",Object(r.b)("inlineCode",{parentName:"p"},"complex.[cpp|h]"),", ",Object(r.b)("inlineCode",{parentName:"p"},"int_set.[cpp|h]"),", ",Object(r.b)("inlineCode",{parentName:"p"},"int_node.h"),", ",Object(r.b)("inlineCode",{parentName:"p"},"main[x].cpp"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"Makefile"),"."),Object(r.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(r.b)("div",{parentName:"div",className:"admonition-heading"},Object(r.b)("h5",{parentName:"div"},Object(r.b)("span",{parentName:"h5",className:"admonition-icon"},Object(r.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(r.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(r.b)("div",{parentName:"div",className:"admonition-content"},Object(r.b)("p",{parentName:"div"},"If you don't remember how to get the starter codes, go back and check previous exercises for instructions."))),Object(r.b)("h3",{id:"part-1---class-inheritance"},"Part 1 - Class inheritance"),Object(r.b)("h4",{id:"introduction"},"Introduction"),Object(r.b)("p",null,"In this part, you will explore how C++ class inheritance works."),Object(r.b)("h4",{id:"instructions"},"Instructions"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"There is no Makefile for this exercise. To compile, just type: ",Object(r.b)("inlineCode",{parentName:"p"},"g++ -std=c++11 -Wall -Wextra -pedantic main1.cpp -o main1")," or use the alias ",Object(r.b)("inlineCode",{parentName:"p"},"g+++ main1.cpp -o main1"),". Since the class files are fully defined in the .h files which are included in ",Object(r.b)("inlineCode",{parentName:"p"},"main1"),", the code gets fully built this way. You will find that there is at least one compiler error in ",Object(r.b)("inlineCode",{parentName:"p"},"Bclass.h"),". Comment the offending line out and add an annotation as to why it did not compile. You will also find there are several lines in ",Object(r.b)("inlineCode",{parentName:"p"},"main1.cpp")," that do not compile. Again, comment them out but annotate in the file why they did not compile. Ask for help if you do not understand the problems indicated.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Once the compiler errors are fixed, trace through ",Object(r.b)("inlineCode",{parentName:"p"},"main1.cpp")," by hand.  It shows an example of how classes related through inheritance interact with each other. Then run the code. ")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Change the ",Object(r.b)("strong",{parentName:"p"},Object(r.b)("em",{parentName:"strong"},"show"))," function declaration in ",Object(r.b)("inlineCode",{parentName:"p"},"Aclass.h")," to make it ",Object(r.b)("inlineCode",{parentName:"p"},"virtual"),". "))),Object(r.b)("h4",{id:"checkpoints"},"Checkpoints"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"In step 2, did you get the expected results? Why or why not? Discuss with students, CAs, or the instructor."),Object(r.b)("li",{parentName:"ol"},"In step 3, does adding ",Object(r.b)("inlineCode",{parentName:"li"},"virtual")," change the results when you run ",Object(r.b)("inlineCode",{parentName:"li"},"main1.cpp"),"? Why or why not? "),Object(r.b)("li",{parentName:"ol"},"What impact does additionally declaring ",Object(r.b)("strong",{parentName:"li"},Object(r.b)("em",{parentName:"strong"},"show"))," to be ",Object(r.b)("inlineCode",{parentName:"li"},"virtual")," in ",Object(r.b)("inlineCode",{parentName:"li"},"Bclass.h")," have? Does it make a difference?")),Object(r.b)("h3",{id:"part-2---more-class-inheritance-and-abstract-class"},"Part 2 - More class inheritance and abstract class"),Object(r.b)("h4",{id:"introduction-1"},"Introduction"),Object(r.b)("p",null,"In this part, you will explore how C++ class inheritance and abstract classes work."),Object(r.b)("h4",{id:"instructions-1"},"Instructions"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Add a ",Object(r.b)("inlineCode",{parentName:"p"},"virtual")," function named ",Object(r.b)("inlineCode",{parentName:"p"},"toString()")," to ",Object(r.b)("inlineCode",{parentName:"p"},"Aclass.h"),". The function should return a string representation of ",Object(r.b)("inlineCode",{parentName:"p"},"class A")," in the following format:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre"},"[Aclass: a = value of a, d = value of d, size = size of object]\n")),Object(r.b)("p",{parentName:"li"},"The function must be ",Object(r.b)("inlineCode",{parentName:"p"},"const")," protected. If we have an object named ",Object(r.b)("inlineCode",{parentName:"p"},"oA")," of type ",Object(r.b)("inlineCode",{parentName:"p"},"A")," with ",Object(r.b)("inlineCode",{parentName:"p"},"a")," value of ",Object(r.b)("inlineCode",{parentName:"p"},"10")," and ",Object(r.b)("inlineCode",{parentName:"p"},"d")," value of ",Object(r.b)("inlineCode",{parentName:"p"},"100"),", ",Object(r.b)("inlineCode",{parentName:"p"},"oA.toString()")," should return the following string:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre"},"[Aclass: a = 10, d = 100, size = 24]\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Override the ",Object(r.b)("inlineCode",{parentName:"p"},"toString()")," function in ",Object(r.b)("inlineCode",{parentName:"p"},"class B"),"  to return a string representation of ",Object(r.b)("inlineCode",{parentName:"p"},"B")," in the following format:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre"},"[Bclass: a = value of a, b = value of b, d = value of d, size = size of object]\n"))),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Add ",Object(r.b)("em",{parentName:"p"},"accessor")," (i.e., ",Object(r.b)("em",{parentName:"p"},"getter"),") functions if required. You must not change the access specifiers for the fields in ",Object(r.b)("inlineCode",{parentName:"p"},"Aclass"),". Make sure you use the ",Object(r.b)("inlineCode",{parentName:"p"},"override")," keyword as necessary to force a check for proper overriding.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Make ",Object(r.b)("inlineCode",{parentName:"p"},"class A")," an abstract class by adding a ",Object(r.b)("em",{parentName:"p"},"pure")," ",Object(r.b)("inlineCode",{parentName:"p"},"virtual")," function named ",Object(r.b)("inlineCode",{parentName:"p"},"int fun() const")," in ",Object(r.b)("inlineCode",{parentName:"p"},"class A"),". Implement the function ",Object(r.b)("inlineCode",{parentName:"p"},"fun")," in ",Object(r.b)("inlineCode",{parentName:"p"},"B")," such that it returns the multiplication of ",Object(r.b)("inlineCode",{parentName:"p"},"a * b * d"),". Make use of the ",Object(r.b)("inlineCode",{parentName:"p"},"override")," keyword as applicable. Then, modify ",Object(r.b)("inlineCode",{parentName:"p"},"main.cpp")," accordingly by commenting out lines of code (if needed) to get it to compile and run. There is no Makefile for this exercise. To compile, just type: ",Object(r.b)("inlineCode",{parentName:"p"},"g++ -std=c++11 -Wall -Wextra -pedantic main2.cpp -o main2")," or use the alias ",Object(r.b)("inlineCode",{parentName:"p"},"g+++ main2.cpp -o main2"),". Check the results that get printed out.")),Object(r.b)("li",{parentName:"ol"},Object(r.b)("p",{parentName:"li"},"Make a ",Object(r.b)("inlineCode",{parentName:"p"},"C class")," in a file named ",Object(r.b)("inlineCode",{parentName:"p"},"Cclass.h")," (possibly along with ",Object(r.b)("inlineCode",{parentName:"p"},"Cclass.cpp"),") that is derived from ",Object(r.b)("inlineCode",{parentName:"p"},"A class"),". This class has a ",Object(r.b)("inlineCode",{parentName:"p"},"private int")," field named ",Object(r.b)("inlineCode",{parentName:"p"},"e"),". The class should have at least a constructor with an ",Object(r.b)("inlineCode",{parentName:"p"},"int")," parameter used to set the value of ",Object(r.b)("inlineCode",{parentName:"p"},"e"),". The values of ",Object(r.b)("inlineCode",{parentName:"p"},"a")," and ",Object(r.b)("inlineCode",{parentName:"p"},"d")," from the base class should be set to default values. The class should also have a function named ",Object(r.b)("inlineCode",{parentName:"p"},"sete()")," for setting the value of ",Object(r.b)("inlineCode",{parentName:"p"},"e"),". The class should provide its own implementation of the function ",Object(r.b)("inlineCode",{parentName:"p"},"int fun() const")," that returns the multiplication of ",Object(r.b)("inlineCode",{parentName:"p"},"e * a * d"),", as well as the ",Object(r.b)("inlineCode",{parentName:"p"},"toString()")," function. The ",Object(r.b)("inlineCode",{parentName:"p"},"toString()")," function should return:"),Object(r.b)("pre",{parentName:"li"},Object(r.b)("code",{parentName:"pre"},"[Cclass: a = value of a, d = value of d, e = value of e, size = size of object]\n")),Object(r.b)("p",{parentName:"li"},"You may uncomment and run the corresponding code (as well as the ",Object(r.b)("inlineCode",{parentName:"p"},'#include "Cclass.h"')," line on the top) in ",Object(r.b)("inlineCode",{parentName:"p"},"main2.cpp")," to check the results."))),Object(r.b)("h4",{id:"checkpoints-1"},"Checkpoints"),Object(r.b)("ol",null,Object(r.b)("li",{parentName:"ol"},"How do virtual functions work? What is the keyword ",Object(r.b)("inlineCode",{parentName:"li"},"override")," for?"),Object(r.b)("li",{parentName:"ol"},"What is a pure virtual function?"),Object(r.b)("li",{parentName:"ol"},"What makes a class an abstract class in C++? "),Object(r.b)("li",{parentName:"ol"},"How do virtual functions enable polymorphism?"),Object(r.b)("li",{parentName:"ol"},"If we have two classes ",Object(r.b)("inlineCode",{parentName:"li"},"A")," and ",Object(r.b)("inlineCode",{parentName:"li"},"B"),", where ",Object(r.b)("inlineCode",{parentName:"li"},"B")," inherits from ",Object(r.b)("inlineCode",{parentName:"li"},"A"),", does the below function call involve polymorphism (object slicing)?")),Object(r.b)("pre",null,Object(r.b)("code",{parentName:"pre",className:"language-c++"},"void func(A a) { /* do something using a */ }\nB b;\nfunc(b);\n")),Object(r.b)("h3",{id:"part-3---gradescope-submission"},"Part 3 - Gradescope submission"),Object(r.b)("p",null,"Create a ",Object(r.b)("em",{parentName:"p"},"zip")," file called ",Object(r.b)("inlineCode",{parentName:"p"},"ex16.zip"),", which contains ",Object(r.b)("inlineCode",{parentName:"p"},"Aclass.h"),", ",Object(r.b)("inlineCode",{parentName:"p"},"Bclass.h"),", and ",Object(r.b)("inlineCode",{parentName:"p"},"Cclass.h")," with your implementation. (You don't need to submit the ",Object(r.b)("inlineCode",{parentName:"p"},"main[x].cpp")," files. The autograder has its own ",Object(r.b)("inlineCode",{parentName:"p"},"main.cpp")," for testing.).  Submit the zip file as ",Object(r.b)("a",{parentName:"p",href:"https://www.gradescope.com/courses/266485/assignments/1353459"},"Day 16 In-class Exercise")," on Gradescope. Make sure your program passes all the autograder tests in order to get full credit. It is due before the next class.  However, late submission is allowed until our last class.  Even so, we highly recommend you to keep up the schedule, finish each in-class exercise, and submit it on Gradescope before the next class."))}b.isMDXComponent=!0}}]);