(window.webpackJsonp=window.webpackJsonp||[]).push([[17],{138:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/ssh-97bdd16476aed2c9add3ae9764e4a299.png"},139:function(e,t,a){"use strict";a.r(t),t.default=a.p+"assets/images/switch-github-organization-2af8ef386e0408fdab3f9a1c7c33dffe.png"},83:function(e,t,a){"use strict";a.r(t),a.d(t,"frontMatter",(function(){return s})),a.d(t,"metadata",(function(){return l})),a.d(t,"rightToc",(function(){return p})),a.d(t,"default",(function(){return m}));var o=a(2),n=a(6),i=(a(0),a(99)),r=a(94),c=["components"],s={id:"ex2",title:"Day 2 In-class Exercise"},l={unversionedId:"exercises/ex2",id:"exercises/ex2",isDocsHomePage:!1,title:"Day 2 In-class Exercise",description:"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and try to finish on your own before our next class meeting. Remember to submit on Gradescope once or more, checking the autograder results. For credit, you must submit by the end of the semester.",source:"@site/docs\\exercises\\ex2.md",slug:"/exercises/ex2",permalink:"/cs220-summer21/docs/exercises/ex2",version:"current"},p=[{value:"Learning Objectives",id:"learning-objectives",children:[{value:"Part 1 - Remote access",id:"part-1---remote-access",children:[]},{value:"Part 2 - Editor practice",id:"part-2---editor-practice",children:[]},{value:"Part 3 - File transfers between local and remote machines",id:"part-3---file-transfers-between-local-and-remote-machines",children:[]},{value:"Part 4 - Git",id:"part-4---git",children:[]},{value:"Part 5 - In-class exercise workflow",id:"part-5---in-class-exercise-workflow",children:[]},{value:"Part 6 - Control flow in C (A simple GPA calculator)",id:"part-6---control-flow-in-c-a-simple-gpa-calculator",children:[]},{value:"Part 7 - Coding assignment submission workflow",id:"part-7---coding-assignment-submission-workflow",children:[]},{value:"Part 8 - Gradescope submission",id:"part-8---gradescope-submission",children:[]}]}],b={rightToc:p};function m(e){var t=e.components,s=Object(n.a)(e,c);return Object(i.b)("wrapper",Object(o.a)({},b,s,{components:t,mdxType:"MDXLayout"}),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and try to finish on your own before our next class meeting. Remember to submit on Gradescope once or more, checking the autograder results. For credit, you must submit by the end of the semester. "))),Object(i.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(i.b)("div",{className:"admonition admonition-success alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Objectives")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"This exercise should help you gain familiarity with "),Object(i.b)("ul",{parentName:"div"},Object(i.b)("li",{parentName:"ul"},"Unix/Linux commands"),Object(i.b)("li",{parentName:"ul"},"Remote access - ",Object(i.b)("em",{parentName:"li"},"ssh")),Object(i.b)("li",{parentName:"ul"},"a text editor - ",Object(i.b)("em",{parentName:"li"},"emacs")," (or ",Object(i.b)("em",{parentName:"li"},"vim"),")"),Object(i.b)("li",{parentName:"ul"},"the distributed version control tool - ",Object(i.b)("em",{parentName:"li"},"git")),Object(i.b)("li",{parentName:"ul"},"a tool for bundling files - ",Object(i.b)("em",{parentName:"li"},"zip")),Object(i.b)("li",{parentName:"ul"},"a tool for transferring files - ",Object(i.b)("em",{parentName:"li"},"scp")),Object(i.b)("li",{parentName:"ul"},"C control flow")))),Object(i.b)("h3",{id:"part-1---remote-access"},"Part 1 - Remote access"),Object(i.b)("h4",{id:"introduction"},"Introduction"),Object(i.b)("p",null,"As mentioned in the last exercise, you will be working remotely on CS Ugrad machines. Now, you should have your CS accounts ready. It's time to get familiar with the remote access tool - ",Object(i.b)("em",{parentName:"p"},"ssh"),"."),Object(i.b)("h4",{id:"instructions"},"Instructions"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Open a terminal on a Linux/Mac machine or Windows WSL."),Object(i.b)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you forget how to open a terminal, revisit the last exercise.")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use this command to remote access a server:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"ssh USERNAME@SERVER_NAME\n")),Object(i.b)("p",{parentName:"li"},"where ",Object(i.b)("em",{parentName:"p"},"USERNAME")," is your CS account user name and ",Object(i.b)("em",{parentName:"p"},"SERVER_NAME")," is ",Object(i.b)("inlineCode",{parentName:"p"},"ugradx.cs.jhu.edu"),", or any machine ",Object(i.b)("inlineCode",{parentName:"p"},"ugrad1.cs.jhu.edu"),", ",Object(i.b)("inlineCode",{parentName:"p"},"ugrad2.cs.jhu.edu"),", \u2026 ",Object(i.b)("inlineCode",{parentName:"p"},"ugrad24.cs.jhu.edu"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"You will be asked to type in your password. Once you input the correct password, you should see a message like the below:\n",Object(i.b)("img",{alt:"ssh",src:a(138).default})),Object(i.b)("p",{parentName:"li"},"  You should also notice that the ",Object(i.b)("em",{parentName:"p"},"@MACHINE_NAME")," has changed from your local machine to the remote server. In the above example, it changed from my laptop ",Object(i.b)("em",{parentName:"p"},"MSI_SINGCHUN")," to ",Object(i.b)("em",{parentName:"p"},"ugradx"),". This is a hint that tells you if you are on your local machine or the remote server."),Object(i.b)("p",{parentName:"li"},'  If you hear us ask you to "ssh to ugrad", it implies that you should execute this command and ',Object(i.b)("strong",{parentName:"p"},"work remotely")," on ugrad instead of working on your local PC."),Object(i.b)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"For Windows users")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Windows users can ssh directly using Windows Powershell.  However, you are advised to download and use ",Object(i.b)("a",{parentName:"p",href:"https://www.putty.org/"},"PUTTY"),'. Directly "sshing" into ugrad machines via Windows Powershell has caused an issue with keyboard layouts in the past!')))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"(Optional) You should come back to this after finishing part 3. You have been using your username and password to ssh. To skip typing password every time you ssh, you may set up ssh key. "),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"Follow the instruction ",Object(i.b)("a",{href:Object(r.a)("docs/resources/github-ssh#creating-an-ssh-publicprivate-keypair")},"here")," to (only the first step) create your own ssh public/private key on the ",Object(i.b)("strong",{parentName:"li"},"ugrad server"),"."),Object(i.b)("li",{parentName:"ol"},"Now, on the ",Object(i.b)("strong",{parentName:"li"},"ugrad server"),", copy ",Object(i.b)("inlineCode",{parentName:"li"},"id_rsa.pub")," to ",Object(i.b)("inlineCode",{parentName:"li"},"authorized_keys"),". You may use this command:",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"cp ~/.ssh/id_rsa.pub ~/.ssh/authorized_keys\n")),Object(i.b)("inlineCode",{parentName:"li"},"authorized_keys")," tells ",Object(i.b)("em",{parentName:"li"},"ssh")," which public key is allowed to remote access."),Object(i.b)("li",{parentName:"ol"},"Then, go back to your local machine and use the ",Object(i.b)("em",{parentName:"li"},"scp")," command in Part 3 to copy ",Object(i.b)("inlineCode",{parentName:"li"},"~/.ssh/id_rsa")," from the ugrad server to ",Object(i.b)("inlineCode",{parentName:"li"},"~/.ssh/")," on your local machine. You should use ",Object(i.b)("inlineCode",{parentName:"li"},"-p")," to preserve the modes of the file. For example:",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"scp -p USERNAME@ugradx.cs.jhu.edu:~/.ssh/id_rsa ~/.ssh/\n")),"Now, when you ssh on your local machine, ssh will use the private key ",Object(i.b)("inlineCode",{parentName:"li"},"id_rsa"),' to establish the connection. For a valid public/private pair, you will be granted access from your local machine to the ugrad server via ssh keys.  From now on, you no longer need to type your password when "sshing".')))),Object(i.b)("h4",{id:"checkpoints"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"How can you remote access an ugrad server using ",Object(i.b)("inlineCode",{parentName:"li"},"ssh"),"?"),Object(i.b)("li",{parentName:"ol"},"Looking at your terminal, can you immediately tell if you are on your local PC or an ugrad server?")),Object(i.b)("h3",{id:"part-2---editor-practice"},"Part 2 - Editor practice"),Object(i.b)("h4",{id:"introduction-1"},"Introduction"),Object(i.b)("p",null,"Since you work remotely via a terminal, it is essential for you to be familiar with console editors such as ",Object(i.b)("em",{parentName:"p"},"emacs")," (or ",Object(i.b)("em",{parentName:"p"},"vim"),"). In this part, you will work through an editor tutorial and get yourself ready to edit files on a terminal."),Object(i.b)("h4",{id:"instructions-1"},"Instructions"),Object(i.b)("p",null,"Work through at least one tutorial ",Object(i.b)("a",{parentName:"p",href:"https://www.gnu.org/software/emacs/tour/"},"emacs")," (or ",Object(i.b)("a",{parentName:"p",href:"https://www.openvim.com/"},"vim"),")."),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"NOTE: Whether or not you get to work on it during today's exercise, you are expected to complete a tutorial for one of the two editors before you come to our next meeting. In fact, we recommend completing several; the more times you practice the commands, the quicker you will learn them."))),Object(i.b)("h4",{id:"checkpoints-1"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"How do you copy and paste in ",Object(i.b)("em",{parentName:"li"},"emacs")," (or ",Object(i.b)("em",{parentName:"li"},"vim"),")?"),Object(i.b)("li",{parentName:"ol"},"How do you cut and paste in ",Object(i.b)("em",{parentName:"li"},"emacs")," (or ",Object(i.b)("em",{parentName:"li"},"vim"),")?"),Object(i.b)("li",{parentName:"ol"},"How do you search in ",Object(i.b)("em",{parentName:"li"},"emacs")," (or ",Object(i.b)("em",{parentName:"li"},"vim"),")?"),Object(i.b)("li",{parentName:"ol"},"How do you save and exit in ",Object(i.b)("em",{parentName:"li"},"emacs")," (or ",Object(i.b)("em",{parentName:"li"},"vim"),")?"),Object(i.b)("li",{parentName:"ol"},"How do you discard changes in ",Object(i.b)("em",{parentName:"li"},"emacs")," (or ",Object(i.b)("em",{parentName:"li"},"vim"),")?")),Object(i.b)("h3",{id:"part-3---file-transfers-between-local-and-remote-machines"},"Part 3 - File transfers between local and remote machines"),Object(i.b)("h4",{id:"introduction-2"},"Introduction"),Object(i.b)("p",null,"You are work remotely on the ugrad machine, but you may work locally on a local machine, and you also need to get the files for homework submission. You need a tool to transfer files between local and remote machines. ",Object(i.b)("inlineCode",{parentName:"p"},"scp")," is the right tool for this purpose.  In this part, you will practice how to transfer files between local and remote machines, bundle files and directories into a zip, and refresh your Linux commands."),Object(i.b)("h4",{id:"instructions-2"},"Instructions"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If you are not on a ugrad server, ssh to one.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Create a directory called ",Object(i.b)("inlineCode",{parentName:"p"},"test")," and a file called ",Object(i.b)("inlineCode",{parentName:"p"},"temp")," under your home directory. You can create an empty file by using the ",Object(i.b)("em",{parentName:"p"},"touch ")," command. e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"touch temp"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Change into ",Object(i.b)("inlineCode",{parentName:"p"},"test")," directory, and create two files called ",Object(i.b)("inlineCode",{parentName:"p"},"hello")," and ",Object(i.b)("inlineCode",{parentName:"p"},"world"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Go back to your home directory.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Bundle the directory ",Object(i.b)("inlineCode",{parentName:"p"},"test")," and file ",Object(i.b)("inlineCode",{parentName:"p"},"temp")," running this command: ",Object(i.b)("inlineCode",{parentName:"p"},"zip -r bundled.zip test temp"),". Here ",Object(i.b)("inlineCode",{parentName:"p"},"-r")," means recursively. It is required to bundle files inside ",Object(i.b)("inlineCode",{parentName:"p"},"test"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Verify what's in ",Object(i.b)("inlineCode",{parentName:"p"},"bundled.zip")," by running this command: ",Object(i.b)("inlineCode",{parentName:"p"},"unzip -l bundled.zip"),".  You should see ",Object(i.b)("inlineCode",{parentName:"p"},"test"),", ",Object(i.b)("inlineCode",{parentName:"p"},"temp"),", ",Object(i.b)("inlineCode",{parentName:"p"},"test/hello")," and ",Object(i.b)("inlineCode",{parentName:"p"},"test/world"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Go back to your local machine and copy ",Object(i.b)("inlineCode",{parentName:"p"},"bundled.zip")," from the remote machine to the current directory on your local machine. Our tools for accomplishing this will be ",Object(i.b)("inlineCode",{parentName:"p"},"scp")," (Mac or Linux or Windows Powershell), or either ",Object(i.b)("inlineCode",{parentName:"p"},"pscp")," or ",Object(i.b)("inlineCode",{parentName:"p"},"WinSCP")," if installed on Windows. "),Object(i.b)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Mac or Linux Users ")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"In a terminal on your local computer, copy your ",Object(i.b)("em",{parentName:"p"},".zip")," file from ugrad to your local computer using ",Object(i.b)("inlineCode",{parentName:"p"},"scp <source> <destination>"),". For example, open a new Terminal window on your Mac (not the one in which you are connected to ugradx!), navigate to the folder into which you want the file to be copied and type: ",Object(i.b)("inlineCode",{parentName:"p"},"scp USERNAME@SERVER_NAME:PATH_TO_FILE ."),". The source argument above first indicates in what account and on what machine you want to look, then, after the colon, it indicates a relative path from your home directory. The destination argument, however, is simply a dot, because you are typing this command on your Mac and want the file to be transferred to the folder on your Mac that you are currently working in. So, there is no need to specify the destination machine; it is the local one by default. "))),Object(i.b)("div",{parentName:"li",className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Tip ")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Do not try to type a ",Object(i.b)("em",{parentName:"p"},"./")," after the colon to start the relative path name, or a ",Object(i.b)("em",{parentName:"p"},"~/")," to indicate an absolute path name; ",Object(i.b)("inlineCode",{parentName:"p"},"scp")," will not understand that notation."))),Object(i.b)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"Windows Users ")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"You will need ",Object(i.b)("inlineCode",{parentName:"p"},"pscp")," here, which should have been installed already automatically when you installed Putty. Copy your ",Object(i.b)("em",{parentName:"p"},".zip")," file from ugrad to your local computer using ",Object(i.b)("inlineCode",{parentName:"p"},"pscp <source> <destination>"),". For example, you could open a Command Prompt window or Powrshell and type ",Object(i.b)("inlineCode",{parentName:"p"},"pscp USERNAME@SERVER_NAME:PATH_TO_FILE ."),".  For Windows where WinSCP has been installed: connect to ugradx using the WinSCP interface and drag the file from the ugradx side to your local computer's side.")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"On your local machine, use the software you like to unzip it and verify if you have ",Object(i.b)("inlineCode",{parentName:"p"},"test"),", ",Object(i.b)("inlineCode",{parentName:"p"},"temp"),", ",Object(i.b)("inlineCode",{parentName:"p"},"test/hello")," and ",Object(i.b)("inlineCode",{parentName:"p"},"test/world"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Modify the test files as you like, and zip them back as ",Object(i.b)("inlineCode",{parentName:"p"},"bundled.zip"),". Now copy it back to the ugrad server. e.g. by running: ",Object(i.b)("inlineCode",{parentName:"p"},"scp bundled.zip USERNAME@SERVER_NAME:~/"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"At last, ssh to ugrad and unzip the file by running ",Object(i.b)("inlineCode",{parentName:"p"},"unzip -o bundled.zip"),". Note that ",Object(i.b)("inlineCode",{parentName:"p"},"-o")," means override the existing files. Use it with caution! Then, ",Object(i.b)("inlineCode",{parentName:"p"},"cat")," the file (e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"cat test"),"). You should see the changes you made."))),Object(i.b)("h4",{id:"checkpoints-2"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"How do you transfer files from remote to local machine?"),Object(i.b)("li",{parentName:"ol"},"How do you transfer files from local to remote machine?"),Object(i.b)("li",{parentName:"ol"},"How do you zip files?"),Object(i.b)("li",{parentName:"ol"},"How do you verify zipped files?")),Object(i.b)("h3",{id:"part-4---git"},"Part 4 - Git"),Object(i.b)("h4",{id:"introduction-3"},"Introduction"),Object(i.b)("p",null,"Version control is an important aspect of software development.  You will practice using ",Object(i.b)("em",{parentName:"p"},"git")," for your assignment version control and late team collaboration in this course. In this part, you will get familiarity with ",Object(i.b)("em",{parentName:"p"},"git")," and establish the concepts of local and remote repositories."),Object(i.b)("h4",{id:"instructions-3"},"Instructions"),Object(i.b)("h5",{id:"clone-a-remote-repository"},"Clone a remote repository"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"You should have received (and accepted) an invitation email to join the course Github organization. Login and go to the course Github organization page ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jhu-ip"},"here"),", you should be able to see a personal repository with the name ",Object(i.b)("inlineCode",{parentName:"p"},"2021-summer-student-JHED"),' where "JHED" is your actual JHED name. This will serve as your private space from here on that you will use for your exercises and homework. Only you and the course staff have access to your private repo.'),Object(i.b)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you don't have access to the repository, please make sure you have accepted the invitation to the ",Object(i.b)("inlineCode",{parentName:"p"},"jhu-ip")," organization. If you haven't received an invitation, please contact your instructor."))),Object(i.b)("p",{parentName:"li"},"If you are on your personal Github page, you probably need to change to the course organization (i.e. jhu-ip) on the left menu as follows:"),Object(i.b)("p",{parentName:"li"},Object(i.b)("img",{src:a(139).default})),Object(i.b)("p",{parentName:"li"},"where instead of ",Object(i.b)("em",{parentName:"p"},"test"),", you should see your own Github user name."),Object(i.b)("p",{parentName:"li"},"Besides  your own personal repository, you should also see ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jhu-ip/cs220-summer21-public.git"},"cs220-summer21-public")," - our course repository, where you can find the starter codes for the exercises, homework and projects. This is a remote repository on Github, and it is visualized using the web interface. With the web interface, you can navigate what's in the repository as if you navigate different directories/files.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"A repository is essentially structured files and directories. We can also visualize it on our local machine with the OS's file system so that we can modify the directories/files in the repository. To begin, you need to clone the remote repository to a local repository on a machine. For example, to clone our class repository to a ugrad server:"),Object(i.b)("ol",{parentName:"li"},Object(i.b)("li",{parentName:"ol"},"ssh to ugrad and type ",Object(i.b)("inlineCode",{parentName:"li"},"cd ~")," to make sure you are in your home directory."),Object(i.b)("li",{parentName:"ol"},"Run ",Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"git clone https://github.com/jhu-ip/cs220-summer21-public.git\n"))),Object(i.b)("li",{parentName:"ol"},"Type ",Object(i.b)("inlineCode",{parentName:"li"},"ls")," to check what's in your home directory. You should see a new directory called ",Object(i.b)("inlineCode",{parentName:"li"},"cs220-summer21-public")," has been created. This is the local repository visualized using the OS's file system, which is a copy of the remote repository. Now you can navigate the repository using Linux commands."))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Clone your personal repository similar to how you have cloned ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jhu-ip/cs220-summer21-public.git"},"cs220-summer21-public"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now, ",Object(i.b)("strong",{parentName:"p"},"let's rename your local personal repository directory to ",Object(i.b)("em",{parentName:"strong"},"cs220")),": ",Object(i.b)("inlineCode",{parentName:"p"},"mv ~/2021-summer-student-JHED ~/cs220")," and also ",Object(i.b)("strong",{parentName:"p"},"rename your local course repository to ",Object(i.b)("em",{parentName:"strong"},"cs220-public")),"  From now on, we will refer ",Object(i.b)("inlineCode",{parentName:"p"},"cs220")," as your personal local repository and ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public")," as the course local repository.  ",Object(i.b)("em",{parentName:"p"},"If you name it differently, don't be confused by what ",Object(i.b)("inlineCode",{parentName:"em"},"cs220")," and ",Object(i.b)("inlineCode",{parentName:"em"},"cs220-public")," directories are.")))),Object(i.b)("div",{className:"admonition admonition-caution alert alert--warning"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"16",height:"16",viewBox:"0 0 16 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M8.893 1.5c-.183-.31-.52-.5-.887-.5s-.703.19-.886.5L.138 13.499a.98.98 0 0 0 0 1.001c.193.31.53.501.886.501h13.964c.367 0 .704-.19.877-.5a1.03 1.03 0 0 0 .01-1.002L8.893 1.5zm.133 11.497H6.987v-2.003h2.039v2.003zm0-3.004H6.987V5.987h2.039v4.006z"}))),"Tip")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("ol",{parentName:"div"},Object(i.b)("li",{parentName:"ol"},"Do not use the ssh version of the clone command; use the https one."),Object(i.b)("li",{parentName:"ol"},"If you already have the repository cloned, you can update the local repository by pulling the changes from the remote repository using the command ",Object(i.b)("inlineCode",{parentName:"li"},"git pull"),".")))),Object(i.b)("h5",{id:"checkpoints-3"},"Checkpoints"),Object(i.b)("p",null,"Now you should have successfully cloned remote repositories to the ugrad machine. Here are some checkpoints you should ask yourself:"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"What is a remote repository?"),Object(i.b)("li",{parentName:"ol"},"How do you clone a remote repository?"),Object(i.b)("li",{parentName:"ol"},"What is a local repository?")),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you did not successfully complete the above steps, ask a member of the course staff and/or post on ",Object(i.b)("a",{href:"http://piazza.com/jhu/summer2021/en601220",target:"_blank"},"Piazza"),"."))),Object(i.b)("h5",{id:"make-changes-in-a-local-repository"},"Make changes in a local repository"),Object(i.b)("p",null,"The first thing you want to do is to create a ",Object(i.b)("em",{parentName:"p"},"README")," for your personal repository."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use ",Object(i.b)("inlineCode",{parentName:"p"},"cd")," to move into ",Object(i.b)("inlineCode",{parentName:"p"},"cs220")," directory. Use ",Object(i.b)("inlineCode",{parentName:"p"},"pwd")," to check that you are in the right place.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use a text editor (",Object(i.b)("em",{parentName:"p"},"emacs")," or ",Object(i.b)("em",{parentName:"p"},"vim"),") to create a new text file called ",Object(i.b)("inlineCode",{parentName:"p"},"README")," there. Put ",Object(i.b)("em",{parentName:"p"},"your name, JHED, class year, and major(s)/minor(s)")," in your ",Object(i.b)("em",{parentName:"p"},"README"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Type the command ",Object(i.b)("inlineCode",{parentName:"p"},"git status")," to see what it reports. You should see all potential changes in your local repository, which is the ",Object(i.b)("em",{parentName:"p"},"README")," file and it said it is un-tracked.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"You created a potential change with the new ",Object(i.b)("em",{parentName:"p"},"README")," file.  However, this change is not added to your local repository yet. To add it to your local repository, you need to use the command ",Object(i.b)("inlineCode",{parentName:"p"},"git add REAMDE"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Type the command ",Object(i.b)("inlineCode",{parentName:"p"},"git status")," to see what it reports. You should see what has been added in your local repository, which is the ",Object(i.b)("em",{parentName:"p"},"README")," file and it said it is added.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Up to now, the change has been added to the local repository but not applied yet. To apply the changes, you need to commit it using ",Object(i.b)("inlineCode",{parentName:"p"},'git commit -m "created README"'),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Because it is your first commit, ",Object(i.b)("em",{parentName:"p"},"git")," likely asks for your name and email. You may see something like this:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},'*** Please tell me who you are  \n\nRun\n\ngit config --global user.email "you@example.com"\ngit config --global user.name "Your name"\n\nto set your account\'s default identity.\nOmit --global to set the identity only in this repository.\n')),Object(i.b)("p",{parentName:"li"},"Follow these instructions and set up the global committer identity and commit the change to your local repository."),Object(i.b)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"How do I commit with my identity to someone's local repository temporarily?")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you work in a team, you may be working on your teammate's machine directly. After you make changes in the local repository of your teammate, you may want to commit the changes and push them to the remote repository with you as the committer. In this case, you may want to run this commit command to specify the committer's name and email:"),Object(i.b)("pre",{parentName:"div"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},'git -c user.name="Your name" -c user.email="you@example.com" commit -m "messages"\n'))))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now, type the command ",Object(i.b)("inlineCode",{parentName:"p"},"git status")," to see what it reports. You should see nothing has been reported, i.e. no more potential changes in your local repository.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Type the command ",Object(i.b)("inlineCode",{parentName:"p"},"git log"),' to see what it reports. You should see a new entry with the commit message "created README".')),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Edit your ",Object(i.b)("em",{parentName:"p"},"README")," file, and within the file, add a line saying that this is your personal repository for Intermediate Programming at JHU for Summer 2021.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Check the status again with ",Object(i.b)("inlineCode",{parentName:"p"},"git status"),", then add and commit your updated ",Object(i.b)("em",{parentName:"p"},"README")," using ",Object(i.b)("inlineCode",{parentName:"p"},'git commit -am "updated README"'),". "),Object(i.b)("div",{parentName:"li",className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"The ",Object(i.b)("inlineCode",{parentName:"p"},"-a")," flag commits all changed files. It is convenient to use it if you are sure that you want to add all the potential changes.")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Type the command ",Object(i.b)("inlineCode",{parentName:"p"},"git log")," to see what it reports. You should now see two entries."))),Object(i.b)("h5",{id:"checkpoints-4"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"How do you add a change to the local repository?"),Object(i.b)("li",{parentName:"ol"},"How do you add all changes to the local repository?"),Object(i.b)("li",{parentName:"ol"},"How do you confirm/commit the added changes to the local repository?"),Object(i.b)("li",{parentName:"ol"},"Look it up: how do you reset the added changes before you commit?"),Object(i.b)("li",{parentName:"ol"},"Look it up: how do you revert the last commit?"),Object(i.b)("li",{parentName:"ol"},"How do you specify the committer identify for a specific commit (instead of using the global git configuration)?")),Object(i.b)("h5",{id:"push-changes-to-the-remote-repository"},"Push changes to the remote repository"),Object(i.b)("p",null,"So far, we made changes in the local repository (by ",Object(i.b)("inlineCode",{parentName:"p"},"git add")," and ",Object(i.b)("inlineCode",{parentName:"p"},"git commit"),"). You will need to push these changes to the remote repository."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Push changes to the remote repository using the command ",Object(i.b)("inlineCode",{parentName:"li"},"git push"),"."),Object(i.b)("li",{parentName:"ol"},"Now, use the web browser and go to your personal repository on ",Object(i.b)("a",{parentName:"li",href:"https://github.com/jhu-ip"},"Github"),". You should see all the changes you have made locally have been reflected in the remote repository.")),Object(i.b)("h5",{id:"checkpoints-5"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"If your local repository is not up-to-date, can you still ",Object(i.b)("inlineCode",{parentName:"li"},"git push")," the local changes to remote?")),Object(i.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Github ssh authentication")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Similar to remote access, ssh allows us to use ssh key for authentication instead of username-password. If you want to skip typing password, you can follow the instruction ",Object(i.b)("a",{href:Object(r.a)("docs/resources/github-ssh")},"here")," to set up the ssh authentication."))),Object(i.b)("h3",{id:"part-5---in-class-exercise-workflow"},"Part 5 - In-class exercise workflow"),Object(i.b)("h4",{id:"introduction-4"},"Introduction"),Object(i.b)("p",null,"If starter codes are provided, you will find them in the course repository ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jhu-ip/cs220-summer21-public.git"},"cs220-summer21-public"),", which you should have cloned in a directory now called ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public"),". Note that you do not have write access to this repository. That means if you ",Object(i.b)("inlineCode",{parentName:"p"},"git add")," and ",Object(i.b)("inlineCode",{parentName:"p"},"git commit")," in ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public"),", you will not be able to ",Object(i.b)("inlineCode",{parentName:"p"},"git push")," it to the remote repository. Therefore, you should always copy the starter codes to ",Object(i.b)("inlineCode",{parentName:"p"},"cs220")," (your personal repository) before you make any changes."),Object(i.b)("h4",{id:"instructions-4"},"Instructions"),Object(i.b)("p",null,"Let us now use ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public/exercises/ex2/hello_world.c")," to practice the in-class exercise workflow."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If you are not on a ugrad server, ssh to it.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"To make it more structural, navigate into ",Object(i.b)("inlineCode",{parentName:"p"},"cs220"),". e.g. ",Object(i.b)("inlineCode",{parentName:"p"},"cd ~/cs220")," and create a directory ",Object(i.b)("inlineCode",{parentName:"p"},"exercises")," and a subdirectory ",Object(i.b)("inlineCode",{parentName:"p"},"ex2")," in ",Object(i.b)("inlineCode",{parentName:"p"},"exercises"),". You should put each in-class exercise into as a subdirectory in ",Object(i.b)("inlineCode",{parentName:"p"},"cs220/exercises"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Copy ",Object(i.b)("inlineCode",{parentName:"p"},"hello_world.c")," from ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public/exercises/ex2/")," to ",Object(i.b)("inlineCode",{parentName:"p"},"cs220/exercises/ex2")," by typing (Hint: using tab-completion will help here!): "),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"cp ~/cs220-public/exercises/ex2/hello_world.c ~/cs220/exercises/ex2/\n")),Object(i.b)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"A Tip for later ")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"You may wish to make a similar structure for homework assignments: a homework directory with a subdirectory named ",Object(i.b)("em",{parentName:"p"},"warmup"),". If you have not started working on ",Object(i.b)("em",{parentName:"p"},"warmup")," yet, create that structure first. If you've already worked on ",Object(i.b)("em",{parentName:"p"},"warmup")," in the top level ",Object(i.b)("em",{parentName:"p"},"cs220")," folder and used git to add and commit the files, you'll want to use ",Object(i.b)("inlineCode",{parentName:"p"},"git mv <source> <destination>")," to rename them, then commit and push again.  Feel free to ask for help during office hours.")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use ",Object(i.b)("inlineCode",{parentName:"p"},"ls")," to verify your directory structure. It should look something like this:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-plain"},"/home/YOUR_LOGIN\n\u251c\u2500\u2500 /cs220\n\u2502   \u251c\u2500\u2500 exercises\n\u2502   \u2502   \u2514\u2500\u2500 ex2\n\u2502   \u2502       \u2514\u2500\u2500 hello_world.c\n\u2502   \u2514\u2500\u2500 homework \n\u2502       \u2514\u2500\u2500 warmup\n\u2502           \u251c\u2500\u2500 one.c\n\u2502           \u251c\u2500\u2500 two.c\n\u2502           \u2514\u2500\u2500 three.c\n\u2514\u2500\u2500 /cs220-public\n    \u2514\u2500\u2500 exercises\n        \u2514\u2500\u2500 ex2\n            \u251c\u2500\u2500 gpa_simple.c\n            \u2514\u2500\u2500 hello_world.c\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now, ",Object(i.b)("inlineCode",{parentName:"p"},"cd cs220/exercises/ex2")," and compile the source file named ",Object(i.b)("inlineCode",{parentName:"p"},"hello_world.c")," and create an executable file by typing:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"gcc -std=c99 -Wall -Wextra -pedantic hello_world.c\n")),Object(i.b)("p",{parentName:"li"},"This command should create a new executable file named ",Object(i.b)("inlineCode",{parentName:"p"},"a.out"),".  (Type ",Object(i.b)("inlineCode",{parentName:"p"},"ls")," again now to confirm that the new file has been created.)")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Execute the file you just created by typing ",Object(i.b)("inlineCode",{parentName:"p"},"./a.out")," and seeing what is printed. The ",Object(i.b)("inlineCode",{parentName:"p"},"./")," to start the command above indicates to Unix that this program resides in the current directory. Unix/Linux does not look in this directory for commands by default, so without this, the command will not be found.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now, make a copy of the ",Object(i.b)("inlineCode",{parentName:"p"},"hello_world.c")," file in the same directory, and name it ",Object(i.b)("inlineCode",{parentName:"p"},"hello_me.c"),".  Here is how: Type:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"cp hello_world.c hello_me.c\n")),Object(i.b)("p",{parentName:"li"},"Note that the ",Object(i.b)("inlineCode",{parentName:"p"},"cp")," (that is, copy) command uses two arguments; the first is the source, the second is the destination. Type ",Object(i.b)("inlineCode",{parentName:"p"},"ls")," once more to confirm that you now have a new copy of the file in your directory.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Using the ",Object(i.b)("em",{parentName:"p"},"emacs")," text editor (or ",Object(i.b)("em",{parentName:"p"},"vim"),' if you prefer), modify the new file so that rather than displaying "Hello, world!" when it is executed, it instead displays ',Object(i.b)("em",{parentName:"p"},'"Hello, $your name$!"'),' (e.g., "Hello, Anna!" or "Hello, Xin!").  To do this using emacs, first type ',Object(i.b)("inlineCode",{parentName:"p"},"emacs hello_me.c")," to open the file for editing.  Once you've made the appropriate modifications in ",Object(i.b)("em",{parentName:"p"},"emacs"),", you can save the file using ",Object(i.b)("inlineCode",{parentName:"p"},"Ctrl-x Ctrl-s"),", and exit ",Object(i.b)("em",{parentName:"p"},"emacs")," using ",Object(i.b)("inlineCode",{parentName:"p"},"Ctrl-x Ctrl-c"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Next, compile your new file by typing "),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"gcc -std=c99 -Wall -Wextra -pedantic hello_me.c\n")),Object(i.b)("p",{parentName:"li"},", then execute it by typing ",Object(i.b)("inlineCode",{parentName:"p"},"./a.out"),". Confirm that it behaves as you planned.  If it does not, go back and re-edit the file, re-compile it, and re-run it until you get it to work.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now, add and commit ",Object(i.b)("inlineCode",{parentName:"p"},"hello_world.c")," and ",Object(i.b)("inlineCode",{parentName:"p"},"hello_me.c")," to your local repository. Remember you use ",Object(i.b)("inlineCode",{parentName:"p"},"git status")," to verify the local repository status. ",Object(i.b)("strong",{parentName:"p"},"Make sure you don't add all changes but only the changes that you want to push to the remote repository later."),"  If you forgot how to add and commit, revisit Part 4.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Push it to the remote repository and visit ",Object(i.b)("a",{parentName:"p",href:"https://github.com/jhu-ip"},"Github")," to confirm you have successfully pushed the changes to the remote repo.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"After this part, your directory structure should look like this:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-plain"},"/home/YOUR_LOGIN\n\u251c\u2500\u2500 /cs220\n\u2502   \u251c\u2500\u2500 exercises\n\u2502   \u2502   \u2514\u2500\u2500 ex2\n\u2502   \u2502       \u251c\u2500\u2500 hello_world.c\n\u2502   \u2502       \u2514\u2500\u2500 hello_me.c\n\u2502   \u2514\u2500\u2500 homework \n\u2502       \u2514\u2500\u2500 warmup\n\u2502           \u251c\u2500\u2500 one.c\n\u2502           \u251c\u2500\u2500 two.c\n\u2502           \u2514\u2500\u2500 three.c\n\u2514\u2500\u2500 /cs220-public\n    \u2514\u2500\u2500 exercises\n        \u2514\u2500\u2500 ex2\n            \u251c\u2500\u2500 gpa_simple.c\n            \u2514\u2500\u2500 hello_world.c\n")))),Object(i.b)("p",null,"In short, you always copy the starter codes from ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public")," to ",Object(i.b)("inlineCode",{parentName:"p"},"cs220")," and then work on the copy. After you are done, you add and commit the changes to your local repository and finally push the changes to your remote repository."),Object(i.b)("h4",{id:"checkpoints-6"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Should you work in the directory ",Object(i.b)("inlineCode",{parentName:"li"},"cs220-public")," or ",Object(i.b)("inlineCode",{parentName:"li"},"cs220"),"?"),Object(i.b)("li",{parentName:"ol"},"Should you commit everything in ",Object(i.b)("inlineCode",{parentName:"li"},"cs220")," or only the source files that you have created/modified?"),Object(i.b)("li",{parentName:"ol"},"What is the command to compile a C program?")),Object(i.b)("h3",{id:"part-6---control-flow-in-c-a-simple-gpa-calculator"},"Part 6 - Control flow in C (A simple GPA calculator)"),Object(i.b)("h4",{id:"introduction-5"},"Introduction"),Object(i.b)("p",null,"In this part, you are going to practice the control flow in C by implementing a simple GPA calculator."),Object(i.b)("h4",{id:"instructions-5"},"Instructions"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Copy the starter codes from ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public/exercises/ex2/gpa_simple.c")," to ",Object(i.b)("inlineCode",{parentName:"p"},"cs220-public/exercises/ex2/gpa_simple.c"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now, your directory structure should look like this:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-plain"},"/home/YOUR_LOGIN\n\u251c\u2500\u2500 /cs220\n\u2502   \u251c\u2500\u2500 exercises\n\u2502   \u2502   \u2514\u2500\u2500 ex2\n\u2502   \u2502       \u251c\u2500\u2500 gpa_simple.c\n\u2502   \u2502       \u251c\u2500\u2500 hello_world.c\n\u2502   \u2502       \u2514\u2500\u2500 hello_me.c\n\u2502   \u2514\u2500\u2500 homework \n\u2502       \u2514\u2500\u2500 warmup\n\u2502           \u251c\u2500\u2500 one.c\n\u2502           \u251c\u2500\u2500 two.c\n\u2502           \u2514\u2500\u2500 three.c\n\u2514\u2500\u2500 /cs220-public\n    \u2514\u2500\u2500 exercises\n        \u2514\u2500\u2500 ex2\n            \u251c\u2500\u2500 gpa_simple.c\n            \u2514\u2500\u2500 hello_world.c\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"It is a good idea to add and commit the starter code to your personal repository before you start editing it. For example,"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},'$ git pull (a good habit to pull changes from remote before you add things to it)\n$ git add gpa_simple.c\n$ git commit -m "Added starter code gpa_simple.c"\n$ git push\n'))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now, you should enter an editor (",Object(i.b)("em",{parentName:"p"},"emacs")," or ",Object(i.b)("em",{parentName:"p"},"vim"),") to read and edit this file. It contains a problem description, sample run, and pseudocode for writing a program to compute a GPA. Your job is to write the C code for it, applying all the basic concepts we have discussed in class. You will need char, int and float data types. You will need to read some input with ",Object(i.b)("inlineCode",{parentName:"p"},"scanf"),", and this can be tricky, so we have a link to a hint below (or ask for help). You will also need to create output with ",Object(i.b)("inlineCode",{parentName:"p"},"printf"),". Lastly, you will need some selection statements and a loop."),Object(i.b)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"If you are coming from a Python background, you will be most comfortable using a while loop and if/else statements in C. However, this problem has a good set-up for a switch statement, so if you do not have time in class today, try to write the grade conversion to point values with a switch statement later for practice. "))),Object(i.b)("p",{parentName:"li"},"This FAQ will help you figure out some of the subtleties in scanning characters in c with respect to skipping newlines: ",Object(i.b)("a",{parentName:"p",href:"https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&id=1043284392"},"https://faq.cprogramming.com/cgi-bin/smartfaq.cgi?answer=1352443831&id=1043284392")),Object(i.b)("div",{parentName:"li",className:"admonition admonition-tip alert alert--success"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Hint")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"try using ",Object(i.b)("inlineCode",{parentName:"p"},'" %c%f"')," rather than just ",Object(i.b)("inlineCode",{parentName:"p"},'"%c%f"')," as your ",Object(i.b)("inlineCode",{parentName:"p"},"scanf")," format string (note the space)!")))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Remember to save frequently and also compile often. If you open a second shell window to log into the ugrad server, you can use one for editing and one for compiling, rather than going in and out of the editor. Here is a reminder of our compile and execute commands:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},"$ gcc -std=c99 -Wall -Wextra -pedantic gpa_simple.c\n$ ./a.out\n"))),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Once you have a (partial) program that compiles and runs, you should remember to commit it to your repo to create that snapshot:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},'$ git status   (good habit, see if anything important needs to be `git add`ed for tracking)\n$ git add gpa_simple.c   (you\'ll likely need to add this file now!)\n$ git commit -m "ex2-1 gpa working version"\n')),Object(i.b)("p",{parentName:"li"},"You can then continue to work on the program development. Before you leave your work session, remember to commit one more time, and then push to synchronize with the remote repo:"),Object(i.b)("pre",{parentName:"li"},Object(i.b)("code",{parentName:"pre",className:"language-bash"},'$ git commit -m "gpa done for now"\n$ git push\n')),Object(i.b)("p",{parentName:"li"},"If you continue to work on the program after class, make sure to keep your repo updated as well!"))),Object(i.b)("h4",{id:"checkpoints-7"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"Which loop have you used? ",Object(i.b)("inlineCode",{parentName:"li"},"while")," loop, ",Object(i.b)("inlineCode",{parentName:"li"},"do while")," loop, ",Object(i.b)("inlineCode",{parentName:"li"},"for")," loop? Can you find a way to convert one to the other?"),Object(i.b)("li",{parentName:"ol"},"Have you used ",Object(i.b)("inlineCode",{parentName:"li"},"if-else")," statement or ",Object(i.b)("inlineCode",{parentName:"li"},"switch-case")," statement?  Can you convert it from one to the other?"),Object(i.b)("li",{parentName:"ol"},"Why do we need an extra space when we ",Object(i.b)("inlineCode",{parentName:"li"},"scanf")," char in a loop?")),Object(i.b)("h3",{id:"part-7---coding-assignment-submission-workflow"},"Part 7 - Coding assignment submission workflow"),Object(i.b)("h4",{id:"introduction-6"},"Introduction"),Object(i.b)("p",null,"In this course, you will be submitting your assignments to Gradescope. In this part, you will use ex2 to prepare an assignment submission - consider this a trial run for turning in an assignment later on. "),Object(i.b)("h4",{id:"instructions-6"},"Instructions"),Object(i.b)("p",null,"Suppose that an assignment asks you to turn in your codes, a new ",Object(i.b)("em",{parentName:"p"},"README")," file, along with a copy of your git log, to show how you have been using git during the assignment."),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Save a copy of your git log to a text file by typing the command ",Object(i.b)("inlineCode",{parentName:"p"},"git log > gitlog.txt"),".")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use ",Object(i.b)("inlineCode",{parentName:"p"},"zip")," as indicated below to bundle/compress your repository into a ",Object(i.b)("em",{parentName:"p"},".zip")," file named ",Object(i.b)("em",{parentName:"p"},"ex2.zip"),". The command should look something like: ",Object(i.b)("inlineCode",{parentName:"p"},"zip ex2.zip  README  gitlog.txt"),". Note that the first argument after ",Object(i.b)("inlineCode",{parentName:"p"},"zip")," is the name of the ",Object(i.b)("em",{parentName:"p"},".zip")," file to create; the remaining arguments are the files or folders to bundle together. ",Object(i.b)("inlineCode",{parentName:"p"},"-r")," flag may be needed if you want to zip the content recursively.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Use ",Object(i.b)("inlineCode",{parentName:"p"},"cd ~")," or just ",Object(i.b)("inlineCode",{parentName:"p"},"cd")," to move into your home directory.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now move (the command ",Object(i.b)("inlineCode",{parentName:"p"},"mv")," means to move, rather than copy) your ",Object(i.b)("em",{parentName:"p"},".zip")," file to your current location using the following command: ",Object(i.b)("inlineCode",{parentName:"p"},"mv cs220/ex2.zip ."),". Note that the ",Object(i.b)("inlineCode",{parentName:"p"},".")," in the command above indicates that the desired destination is your current working directory.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Check to make sure your ",Object(i.b)("em",{parentName:"p"},".zip")," file contains the right files with ",Object(i.b)("inlineCode",{parentName:"p"},"unzip -l")," (this says to list the files that would come out if you were to unzip the bundle) as indicated below: ",Object(i.b)("inlineCode",{parentName:"p"},"unzip -l ex2.zip"),". This will cause a list of the files and directories in your zip file to be displayed on the screen.  It is your chance to double-check that you have included everything.  If you wanted to actually unzip your bundled files (though you do not need to do so now), you could use the unzip command as above, but without the ",Object(i.b)("inlineCode",{parentName:"p"},"-l")," flag.  You will often want to unzip your file in a folder which is different than the one where you created it, to avoid overwriting your original ",Object(i.b)("em",{parentName:"p"},"README")," and ",Object(i.b)("em",{parentName:"p"},"gitlog.txt")," files.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"Now that all required files are bundled together as one ",Object(i.b)("em",{parentName:"p"},".zip")," file, you will need to copy the bundle from ugrad to your local machine. Follow Part 3 for detailed instructions.")),Object(i.b)("li",{parentName:"ol"},Object(i.b)("p",{parentName:"li"},"If you wanted to submit this on Gradescope, you now have a copy of your ",Object(i.b)("em",{parentName:"p"},".zip")," file on your local computer, and could launch a web browser that will allow you to select the file you wish to upload to Gradescope."))),Object(i.b)("div",{className:"admonition admonition-info alert alert--info"},Object(i.b)("div",{parentName:"div",className:"admonition-heading"},Object(i.b)("h5",{parentName:"div"},Object(i.b)("span",{parentName:"h5",className:"admonition-icon"},Object(i.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(i.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"File transfer via Git")),Object(i.b)("div",{parentName:"div",className:"admonition-content"},Object(i.b)("p",{parentName:"div"},"Alternatively, after you have pushed all local changes to the remote repository on your local machine, you can clone the remote repository or pull to update the local repository, then you can directly zip the files that you want to submit. However, if you work locally on your local machine from time to time and only transfer files to ugrad server for testing, you should avoid using Git as the bridge of transfer during debugging. In the past, students doing in this way generated hundreds of meaningless commit messages, which resulted in a point deduction. You should not commit while you are still debugging. A commit should reflect meaningful progress."))),Object(i.b)("h4",{id:"checkpoints-8"},"Checkpoints"),Object(i.b)("ol",null,Object(i.b)("li",{parentName:"ol"},"How do you put your git commit history into a file?")),Object(i.b)("h3",{id:"part-8---gradescope-submission"},"Part 8 - Gradescope submission"),Object(i.b)("p",null,"Now add your implemented ",Object(i.b)("inlineCode",{parentName:"p"},"hello_me.c")," and ",Object(i.b)("inlineCode",{parentName:"p"},"gpa_simple.c")," into ",Object(i.b)("inlineCode",{parentName:"p"},"ex2.zip"),".  So it should contain these files: ",Object(i.b)("inlineCode",{parentName:"p"},"hello_me.c"),", ",Object(i.b)("inlineCode",{parentName:"p"},"gpa_simple.c"),", ",Object(i.b)("inlineCode",{parentName:"p"},"README"),", and ",Object(i.b)("inlineCode",{parentName:"p"},"gitlog.txt"),".  Submit the zip file as ",Object(i.b)("a",{parentName:"p",href:"https://www.gradescope.com/courses/266485/assignments/1335376"},"Day 2 In-class Exercise")," on Gradescope. Make sure your program passes all the autograder tests in order to get full credit. It is due before the next class.  However, late submission is allowed until our last class.  Even so, we highly recommend you to keep up the schedule, finish each in-class exercise, and submit it on Gradescope before the next class."))}m.isMDXComponent=!0}}]);