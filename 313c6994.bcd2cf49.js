(window.webpackJsonp=window.webpackJsonp||[]).push([[11],{106:function(e,t,n){"use strict";n.d(t,"a",(function(){return b})),n.d(t,"b",(function(){return u}));var i=n(0),a=n.n(i);function o(e,t,n){return t in e?Object.defineProperty(e,t,{value:n,enumerable:!0,configurable:!0,writable:!0}):e[t]=n,e}function r(e,t){var n=Object.keys(e);if(Object.getOwnPropertySymbols){var i=Object.getOwnPropertySymbols(e);t&&(i=i.filter((function(t){return Object.getOwnPropertyDescriptor(e,t).enumerable}))),n.push.apply(n,i)}return n}function s(e){for(var t=1;t<arguments.length;t++){var n=null!=arguments[t]?arguments[t]:{};t%2?r(Object(n),!0).forEach((function(t){o(e,t,n[t])})):Object.getOwnPropertyDescriptors?Object.defineProperties(e,Object.getOwnPropertyDescriptors(n)):r(Object(n)).forEach((function(t){Object.defineProperty(e,t,Object.getOwnPropertyDescriptor(n,t))}))}return e}function c(e,t){if(null==e)return{};var n,i,a=function(e,t){if(null==e)return{};var n,i,a={},o=Object.keys(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||(a[n]=e[n]);return a}(e,t);if(Object.getOwnPropertySymbols){var o=Object.getOwnPropertySymbols(e);for(i=0;i<o.length;i++)n=o[i],t.indexOf(n)>=0||Object.prototype.propertyIsEnumerable.call(e,n)&&(a[n]=e[n])}return a}var p=a.a.createContext({}),l=function(e){var t=a.a.useContext(p),n=t;return e&&(n="function"==typeof e?e(t):s(s({},t),e)),n},b=function(e){var t=l(e.components);return a.a.createElement(p.Provider,{value:t},e.children)},m={inlineCode:"code",wrapper:function(e){var t=e.children;return a.a.createElement(a.a.Fragment,{},t)}},d=a.a.forwardRef((function(e,t){var n=e.components,i=e.mdxType,o=e.originalType,r=e.parentName,p=c(e,["components","mdxType","originalType","parentName"]),b=l(n),d=i,u=b["".concat(r,".").concat(d)]||b[d]||m[d]||o;return n?a.a.createElement(u,s(s({ref:t},p),{},{components:n})):a.a.createElement(u,s({ref:t},p))}));function u(e,t){var n=arguments,i=t&&t.mdxType;if("string"==typeof e||i){var o=n.length,r=new Array(o);r[0]=d;var s={};for(var c in t)hasOwnProperty.call(t,c)&&(s[c]=t[c]);s.originalType=e,s.mdxType="string"==typeof e?e:i,r[1]=s;for(var p=2;p<o;p++)r[p]=n[p];return a.a.createElement.apply(null,r)}return a.a.createElement.apply(null,n)}d.displayName="MDXCreateElement"},73:function(e,t,n){"use strict";n.r(t),n.d(t,"frontMatter",(function(){return s})),n.d(t,"metadata",(function(){return c})),n.d(t,"rightToc",(function(){return p})),n.d(t,"default",(function(){return b}));var i=n(2),a=n(6),o=(n(0),n(106)),r=["components"],s={id:"ex17",title:"Day 17 In-class Exercise"},c={unversionedId:"exercises/ex17",id:"exercises/ex17",isDocsHomePage:!1,title:"Day 17 In-class Exercise",description:"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and try to finish on your own before our next class meeting. Remember to submit on Gradescope once or more, checking the autograder results. For credit, you must submit by the end of the semester, passing the autograder tests.",source:"@site/docs\\exercises\\ex17.md",slug:"/exercises/ex17",permalink:"/cs220-summer21/docs/exercises/ex17",version:"current"},p=[{value:"Learning Objectives",id:"learning-objectives",children:[{value:"Part 0 - Get the starter codes",id:"part-0---get-the-starter-codes",children:[]},{value:"Part 1 - Iterators",id:"part-1---iterators",children:[]},{value:"Part 2 - Gradescope submission",id:"part-2---gradescope-submission",children:[]}]}],l={rightToc:p};function b(e){var t=e.components,n=Object(a.a)(e,r);return Object(o.b)("wrapper",Object(i.a)({},l,n,{components:t,mdxType:"MDXLayout"}),Object(o.b)("div",{className:"admonition admonition-info alert alert--info"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"14",height:"16",viewBox:"0 0 14 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M7 2.3c3.14 0 5.7 2.56 5.7 5.7s-2.56 5.7-5.7 5.7A5.71 5.71 0 0 1 1.3 8c0-3.14 2.56-5.7 5.7-5.7zM7 1C3.14 1 0 4.14 0 8s3.14 7 7 7 7-3.14 7-7-3.14-7-7-7zm1 3H6v5h2V4zm0 6H6v2h2v-2z"}))),"info")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"This is an in-class exercise. An exercise page like this one will contain a brief description but is intended to be supplemented by discussion during our meeting time. Complete the exercise to the best of your ability. Feel free to talk with other students as you work, and do not be afraid to ask questions if you get stuck. Aim to complete as much as possible during our meeting, and try to finish on your own before our next class meeting. Remember to submit on Gradescope once or more, checking the autograder results. For credit, you must submit by the end of the semester, passing the autograder tests. "))),Object(o.b)("h2",{id:"learning-objectives"},"Learning Objectives"),Object(o.b)("div",{className:"admonition admonition-success alert alert--success"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"Objectives")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"This exercise will help you gain additional familiarity with:"),Object(o.b)("ul",{parentName:"div"},Object(o.b)("li",{parentName:"ul"},"Templated class"),Object(o.b)("li",{parentName:"ul"},"Writing iterators")))),Object(o.b)("h3",{id:"part-0---get-the-starter-codes"},"Part 0 - Get the starter codes"),Object(o.b)("p",null,"Get the starter codes from ",Object(o.b)("inlineCode",{parentName:"p"},"cs220-public"),", copy them over to ",Object(o.b)("inlineCode",{parentName:"p"},"cs220")," (remember to create a new directory ",Object(o.b)("inlineCode",{parentName:"p"},"ex17")," for that), and create an initial commit with the copied starter codes. You should see the following files: ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.[h|inc]"),", ",Object(o.b)("inlineCode",{parentName:"p"},"MyNode.h"),", ",Object(o.b)("inlineCode",{parentName:"p"},"main[x].cpp"),", and ",Object(o.b)("inlineCode",{parentName:"p"},"Makefile"),"."),Object(o.b)("div",{className:"admonition admonition-tip alert alert--success"},Object(o.b)("div",{parentName:"div",className:"admonition-heading"},Object(o.b)("h5",{parentName:"div"},Object(o.b)("span",{parentName:"h5",className:"admonition-icon"},Object(o.b)("svg",{parentName:"span",xmlns:"http://www.w3.org/2000/svg",width:"12",height:"16",viewBox:"0 0 12 16"},Object(o.b)("path",{parentName:"svg",fillRule:"evenodd",d:"M6.5 0C3.48 0 1 2.19 1 5c0 .92.55 2.25 1 3 1.34 2.25 1.78 2.78 2 4v1h5v-1c.22-1.22.66-1.75 2-4 .45-.75 1-2.08 1-3 0-2.81-2.48-5-5.5-5zm3.64 7.48c-.25.44-.47.8-.67 1.11-.86 1.41-1.25 2.06-1.45 3.23-.02.05-.02.11-.02.17H5c0-.06 0-.13-.02-.17-.2-1.17-.59-1.83-1.45-3.23-.2-.31-.42-.67-.67-1.11C2.44 6.78 2 5.65 2 5c0-2.2 2.02-4 4.5-4 1.22 0 2.36.42 3.22 1.19C10.55 2.94 11 3.94 11 5c0 .66-.44 1.78-.86 2.48zM4 14h5c-.23 1.14-1.3 2-2.5 2s-2.27-.86-2.5-2z"}))),"tip")),Object(o.b)("div",{parentName:"div",className:"admonition-content"},Object(o.b)("p",{parentName:"div"},"If you don't remember how to get the starter codes, go back and check previous exercises for instructions."))),Object(o.b)("h3",{id:"part-1---iterators"},"Part 1 - Iterators"),Object(o.b)("h4",{id:"introduction"},"Introduction"),Object(o.b)("p",null,"In this part, you will follow the instructions and write an iterator for the templated class ",Object(o.b)("inlineCode",{parentName:"p"},"MyList"),"."),Object(o.b)("h4",{id:"instructions"},"Instructions"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Open ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.h"),", ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.inc")," and ",Object(o.b)("inlineCode",{parentName:"p"},"MyNode.h")," to see how they are implemented. Compile and run the code in ",Object(o.b)("inlineCode",{parentName:"p"},"main1.cpp")," using the commands ",Object(o.b)("inlineCode",{parentName:"p"},"make main1")," and ",Object(o.b)("inlineCode",{parentName:"p"},"./main1"),". Check the output of the program and confirm that it makes sense, given the source code.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Read through ",Object(o.b)("inlineCode",{parentName:"p"},"main2.cpp"),".  You can try to compile the code using the command ",Object(o.b)("inlineCode",{parentName:"p"},"make main2")," however you will receive a bunch of errors because the ",Object(o.b)("inlineCode",{parentName:"p"},"MyList<T>::iterator")," nested class is not fully defined in ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.h")," (see TODO: iterator).  Following the comments in ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.h"),", fill in the missing portions of ",Object(o.b)("inlineCode",{parentName:"p"},"MyList<T>::iterator")," until ",Object(o.b)("inlineCode",{parentName:"p"},"main2.cpp")," compiles and prints the expected output. Once you have that working, see TODOs in ",Object(o.b)("inlineCode",{parentName:"p"},"main2.cpp"),".  When you uncomment the line just below, the code should still compile, and the output should show that the list elements were changed.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Read through ",Object(o.b)("inlineCode",{parentName:"p"},"main3.cpp"),".  You can try to compile the code using the command ",Object(o.b)("inlineCode",{parentName:"p"},"make main3")," however you will receive a bunch of errors because the ",Object(o.b)("inlineCode",{parentName:"p"},"MyList<T>::const_iterator")," nested class is not defined (see TODO: const_iterator in ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.h"),").  Fill in the missing portions of ",Object(o.b)("inlineCode",{parentName:"p"},"MyList<T>::const_iterator")," until ",Object(o.b)("inlineCode",{parentName:"p"},"main3.cpp")," compiles and prints the expected output. Once you have that working, see TODOs in ",Object(o.b)("inlineCode",{parentName:"p"},"main3.cpp"),".  When you uncomment the line just below, the code should ",Object(o.b)("u",null,"fail")," to compile, since the ",Object(o.b)("inlineCode",{parentName:"p"},"const_iterator")," should not allow you to modify elements of the list.")),Object(o.b)("li",{parentName:"ol"},Object(o.b)("p",{parentName:"li"},"Read through ",Object(o.b)("inlineCode",{parentName:"p"},"main4.cpp"),".  You can try to compile the code using the command ",Object(o.b)("inlineCode",{parentName:"p"},"make main4"),", however you will receive a bunch of errors because the ",Object(o.b)("inlineCode",{parentName:"p"},"MyList<T>")," constructor that takes two iterators (see TODO: constructor in ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.h"),") is missing.  Fill in the missing portions of ",Object(o.b)("inlineCode",{parentName:"p"},"template<typename Itr> MyList<T>::MyList<T>(Itr i_begin, Itr i_end)")," until ",Object(o.b)("inlineCode",{parentName:"p"},"main4.cpp")," compiles and prints the expected output. Note that the ",Object(o.b)("inlineCode",{parentName:"p"},"typename Itr")," is just another placeholder like our usual ",Object(o.b)("inlineCode",{parentName:"p"},"typename T"),", but here ",Object(o.b)("inlineCode",{parentName:"p"},"Itr")," will stand for some iterator type."))),Object(o.b)("h4",{id:"checkpoints"},"Checkpoints"),Object(o.b)("ol",null,Object(o.b)("li",{parentName:"ol"},"Do you understand why it is possible for ",Object(o.b)("inlineCode",{parentName:"li"},"main()")," to modify the list via the pointer returned by ",Object(o.b)("font",{face:"Consolas"},"mli.get_head()"),"?"),Object(o.b)("li",{parentName:"ol"},"Which operators/functions have you implemented for an ",Object(o.b)("inlineCode",{parentName:"li"},"iterator"),"?"),Object(o.b)("li",{parentName:"ol"},"Which operators/functions have you implemented for a ",Object(o.b)("inlineCode",{parentName:"li"},"const_iterator"),"?"),Object(o.b)("li",{parentName:"ol"},"What is a nested class in C++? How does it affect the data access?")),Object(o.b)("h3",{id:"part-2---gradescope-submission"},"Part 2 - Gradescope submission"),Object(o.b)("p",null,"Create a ",Object(o.b)("em",{parentName:"p"},"zip")," file called ",Object(o.b)("inlineCode",{parentName:"p"},"ex17.zip"),", which contains ",Object(o.b)("inlineCode",{parentName:"p"},"MyList.[h|inc]")," with your implementation (you don't need to submit other files. The autograder has its own ",Object(o.b)("inlineCode",{parentName:"p"},"main.cpp")," and Makefile for testing.).  Submit the zip file as ",Object(o.b)("a",{parentName:"p",href:"https://www.gradescope.com/courses/266485/assignments/1353462"},"Day 17 In-class Exercise")," on Gradescope. Make sure your program passes all the autograder tests in order to get full credit. It is due before the next class.  However, late submission is allowed until our last class.  Even so, we highly recommend you to keep up the schedule, finish each in-class exercise, and submit it on Gradescope before the next class."))}b.isMDXComponent=!0}}]);